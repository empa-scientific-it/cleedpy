---
name: Publish on PyPI

on:
  push:
    tags:
      # After vMajor.Minor.Patch _anything_ is allowed (without "/") !
      - v[0-9]+.[0-9]+.[0-9]+*

jobs:

  # build:
  #   name: Build wheels
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Install C dependencies
  #       run: sudo apt-get install -y libopenblas-dev

  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Build wheels using cibuildwheel
  #       uses: pypa/cibuildwheel@v3.2
  #       # Install blas inside the image
  #       env:
  #         CIBW_BEFORE_ALL_LINUX: yum install -y openblas-devel
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: release-wheel-ubuntu
  #         path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    if: github.repository == 'empa-scientific-it/cleedpy'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: python -m pip install --upgrade build

      - name: Build source distribution
        run: python -m build --sdist --outdir dist

      - name: Upload source distribution
        uses: actions/upload-artifact@v4
        with:
          name: release-sdist
          path: dist/*.tar.gz

  publish:
    runs-on: ubuntu-latest
    name: Publish to GitHub and PyPI
    if: github.repository == 'empa-scientific-it/cleedpy'
    needs: [build_sdist]
    steps:

      - uses: actions/download-artifact@v5
        name: Download source distribution
        with:
          pattern: release-*
          path: ./dist
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages_dir: ./dist

      - uses: softprops/action-gh-release@v2
        name: Create release
        if: startsWith(github.ref, 'refs/tags/v')
        with:
            files: |
                dist/*
            generate_release_notes: true
